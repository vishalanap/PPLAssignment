#Assignment 1
SOLUTION TO PROBLEM A5.c
gimple
CFG
---

;; Function main (main, funcdef_no=0, decl_uid=1703, cgraph_uid=0)

main ()
{
  int d;
  int c;
  int b;
  int a;

<bb 2>:
  d = 10;
  if (c > d)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  a = 3;
  b = 2;
  goto <bb 5>;

<bb 4>:
  a = 2;
  b = 3;

<bb 5>:
  c = a + b;
  return;

}


SSA
---

;; Function main (main, funcdef_no=0, decl_uid=1703, cgraph_uid=0)

main ()
{
  int d;
  int c;
  int b;
  int a;

<bb 2>:
  d_3 = 10;
  if (c_4(D) > d_3)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  a_5 = 3;
  b_6 = 2;
  goto <bb 5>;

<bb 4>:
  a_7 = 2;
  b_8 = 3;

<bb 5>:
  # a_1 = PHI <a_5(3), a_7(4)>
  # b_2 = PHI <b_6(3), b_8(4)>
  c_9 = a_1 + b_2;
  return;

}


Answers


1.Do you notice that each usage of local variable as an operand uses a
 suffix that can be tracked to it's assignment? Why do some variables
 have a suffix `(D)'?

  

ANS== (i)As i guess This is more like the SSA (Static Single Assignment)form.where program variables are assigned in exactly one location in the program. 
(ii)Maybe (D) means it's missinga definition (e.g. c is undefined in its use in the first conditional).

2.Find the point in the CFG in  which the paths of the two assignments
 to variable `a'  and `b' merge. You will notice  that PHI statements
 have  been introduced.Can you guess the syntax of the PHI
 statements?


ANS==Syntax of phi statements is probably PHI < prec_1, prec_2, ... prec_n > where prec_i is name(bb) - name being the name of the variable and bb the number of the basic block in which it was declared. There will be a prec_i for each preceding BB from which control flow can enter the current BB.

3. Can you think of an example in which a PHI node merges more than two
 versions of a variable?




ANS== This could come or done from a switch statement or cascading if-else blocks.